
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uirjyjwzrvqmzdflvyhw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVpcmp5and6cnZxbXpkZmx2eWh3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxMTg2MDAsImV4cCI6MjA1NzY5NDYwMH0.kWMnny5CqVxtAv5qg24_cUPt8BYg0rf8Ihvpy6IT8Wo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
  },
  global: {
    headers: {
      'X-Client-Info': 'complaints-app',
    },
  },
});

// Initialize storage bucket if it doesn't exist
export const initializeStorage = async () => {
  try {
    // Check if bucket exists
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error('Error listing buckets:', listError);
      return;
    }
    
    const bucketExists = buckets?.some(bucket => bucket.name === 'complaint-attachments');
    
    if (!bucketExists) {
      // Create bucket
      const { data, error } = await supabase.storage.createBucket('complaint-attachments', {
        public: true,
        fileSizeLimit: 10485760, // 10MB
      });
      
      if (error) {
        console.error('Error creating storage bucket:', error);
      } else {
        console.log('Storage bucket created successfully');
        
        // Update bucket policy - removed setPublic() as it doesn't exist
        console.log('Bucket is set to public via createBucket options');
      }
    } else {
      console.log('complaint-attachments bucket already exists');
    }
  } catch (error) {
    console.error('Failed to initialize storage:', error);
  }
};

// Run bucket initialization
initializeStorage();
